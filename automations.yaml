- id: '1609516804056'
  alias: Good Night
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 14
      label: Scene 001
      value: KeyPressed2x
  condition: []
  action:
  - scene: scene.good_night
  mode: single
- id: '1625264068184'
  alias: Plex Button
  description: ''
  trigger:
  - device_id: c41a7cabdaf68d062d0fa206dfe908cb
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
    id: singlepress
  - device_id: c41a7cabdaf68d062d0fa206dfe908cb
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: dim_up
    id: longpress
  - device_id: c41a7cabdaf68d062d0fa206dfe908cb
    domain: zha
    platform: device
    type: remote_button_double_press
    subtype: turn_on
    id: doublepress
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: singlepress
      sequence:
      - service: script.plex_on_shield_tv
        data: {}
    - conditions:
      - condition: trigger
        id: longpress
      sequence:
      - service: script.disney_on_shieldtv
        data: {}
    - conditions:
      - condition: trigger
        id: doublepress
      sequence:
      - service: script.hbo_on_shieldtv
        data: {}
  mode: restart
- id: '1632860503837'
  alias: 'Living Room: Light - Dimmer Button'
  description: ''
  use_blueprint:
    path: shannon/ikea_tradfri_2button_dimmer.yaml
    input:
      button_device: 72b251a428277f7ce1b4de58b20344b5
      light_target:
        entity_id:
        - light.livingroom_light
      light_step: 20
      light_delay_ms: 250
- id: '1632860568197'
  alias: 'Den: Lights - Dimmer Button'
  description: ''
  use_blueprint:
    path: shannon/ikea_tradfri_2button_dimmer.yaml
    input:
      button_device: 84350b6f41b7cad45266de52c9f7b34b
      light_target:
        entity_id:
        - light.den_light_1
        - light.den_light_2
      light_step: 20
      light_delay_ms: 250
- id: '1634267597103'
  alias: 'Main Bedroom: Light - Toggle'
  description: ''
  trigger:
  - platform: webhook
    webhook_id: mainbedroomlight
    id: mainbedroomlight
  condition: []
  action:
  - type: toggle
    device_id: 87af888ed4b8db3fe97b27e45725364e
    entity_id: switch.master_bedroom_light
    domain: switch
  mode: single
- id: '1635291448132'
  alias: 'Porch: Light on Timer'
  description: ''
  trigger:
  - platform: sun
    event: sunset
    id: sunset
  - platform: sun
    event: sunrise
    id: sunrise
    offset: -00:30:00
    alias: 30 min before sunrise
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - type: turn_on
        device_id: 15371c839a088f15441a41146da480b9
        entity_id: switch.porch_light
        domain: switch
    - conditions:
      - condition: trigger
        id: sunrise
      sequence:
      - type: turn_off
        device_id: 15371c839a088f15441a41146da480b9
        entity_id: switch.porch_light
        domain: switch
    default: []
  mode: single
- id: '1635291888215'
  alias: Barn Door Protocol
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.exterior_openings
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: doorsopened
  - platform: state
    entity_id:
    - binary_sensor.exterior_openings
    id: doorsclosed
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - climate.ecobee3
    from: 'off'
    to: heat
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: turned_on
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: doorsopened
      - condition: state
        state: 'off'
        entity_id: input_boolean.barn_door_protocol
      - condition: state
        entity_id: climate.ecobee3
        state: heat
      sequence:
      - device_id: 3a4702e5f54b52ded08ab1b7002dcab0
        domain: climate
        entity_id: climate.ecobee3
        type: set_hvac_mode
        hvac_mode: 'off'
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.barn_door_protocol
        data: {}
      - service: notify.telegram_tom
        data:
          title: '*Barn Door Protocol Activated*'
          message: Furnace has been turned off.
    - conditions:
      - condition: trigger
        id: doorsclosed
      - condition: state
        state: 'on'
        entity_id: input_boolean.barn_door_protocol
      sequence:
      - service: ecobee.resume_program
        data:
          entity_id: climate.ecobee3
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.barn_door_protocol
        data: {}
      - service: notify.telegram_tom
        data:
          title: '*Barn Door Protocol*'
          message: Furnace has resumed previous schedule.
    - conditions:
      - condition: trigger
        id: turned_on
      - condition: state
        entity_id: input_boolean.barn_door_protocol
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.barn_door_protocol
    default: []
  mode: restart
- id: '1635292786302'
  alias: 'Living Room: Nightlight'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.hallway_motion
    from: 'off'
    to: 'on'
    id: motion
  - platform: state
    entity_id: binary_sensor.hallway_motion
    id: nomotion
    from: 'on'
    to: 'off'
    for: 00:02:00
  - platform: state
    entity_id: light.livingroom_light
    id: lightsout
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      - condition: device
        type: is_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        for:
          hours: 0
          minutes: 1
          seconds: 0
      - condition: state
        entity_id: sun.sun
        state: below_horizon
        for:
          hours: 0
          minutes: 0
          seconds: 0
      sequence:
      - type: turn_on
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        brightness_pct: 25
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.livingroom_nightlight_status
        data: {}
    - conditions:
      - condition: trigger
        id: nomotion
      - condition: state
        state: 'on'
        entity_id: input_boolean.livingroom_nightlight_status
      sequence:
      - type: turn_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.livingroom_nightlight_status
        data: {}
    default: []
  mode: restart
- id: '1635383409645'
  alias: 'Master Bathroom: Light Buttons'
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    id: low
    event_data:
      node_id: 15
      label: Scene 003
      value: KeyPressed
  - platform: event
    event_type: zwave_js_value_notification
    id: medium
    event_data:
      node_id: 15
      label: Scene 002
      value: KeyPressed2x
  - platform: event
    event_type: zwave_js_value_notification
    id: high
    event_data:
      node_id: 15
      label: Scene 002
      value: KeyPressed3x
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: low
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 25
    - conditions:
      - condition: trigger
        id: medium
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 50
    - conditions:
      - condition: trigger
        id: high
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 100
    default: []
  mode: single
- id: '1635473249505'
  alias: Doorbell Pressed
  description: ''
  trigger:
  - device_id: 6cdda8e754024fedf106703f18c3f64b
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: button_1
  condition:
  - condition: state
    entity_id: timer.doorbell_pause
    state: idle
  action:
  - service: notify.telegram_tom
    data:
      title: Doorbell pressed!
      message: Doorbell has been rung.
  - service: notify.mobile_app_sm_g981v
    data:
      message: Doorbell has been rung.
      title: Doorbell pressed!
  - service: timer.start
    data: {}
    target:
      entity_id: timer.doorbell_pause
  - if:
    - condition: state
      entity_id: binary_sensor.den_tv_active
      state: 'on'
      alias: Confirm Den TV is active
    then:
    - service: notify.den_tv_notifications
      data:
        title: Doorbell
        message: Doorbell has been rung!
    enabled: false
  mode: single
- id: '1635605604406'
  alias: 'Notify: Washer Leak'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.washer_leak_sensor
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      title: Leak Detected!
      message: Water detected on laundry area floor!
  - service: notify.telegram_tom
    data:
      message: Washing Machine Leak Detected!
      title: Leak Detected!
  mode: single
- id: '1637943911802'
  alias: 'Living Room: Christmas Tree Timer'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.time_christmas_tree_on
    id: tree_on
  - platform: time
    at: input_datetime.time_christmas_tree_off
    id: tree_off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: tree_on
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.monoprice_1
    - conditions:
      - condition: trigger
        id: tree_off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.monoprice_1
    default: []
  mode: single
- id: '1640229738497'
  alias: Vacation Alerts
  description: ''
  trigger:
  - platform: state
    entity_id: group.exterior
    to: 'on'
    id: doors_opened
  - platform: state
    entity_id: cover.garage_door
    id: garage_opened
    to: open
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'on'
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'off'
  action:
  - service: notify.mobile_app_iphone
    data:
      message: Doors or garage opened while in vacation mode!
  mode: parallel
  max: 10
- id: '1641600921734'
  alias: 'Living Room: Light Switches'
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_up2
    event_data:
      node_id: 18
      label: Scene 002
      value: KeyPressed2x
    alias: 'Dining Room Switch: Up 2x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_down2
    event_data:
      node_id: 18
      label: Scene 001
      value: KeyPressed2x
    alias: 'Dining Room Switch: Down 2x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_up3
    event_data:
      node_id: 18
      label: Scene 002
      value: KeyPressed3x
    alias: 'Dining Room Switch: Up 3x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_down3
    event_data:
      node_id: 18
      label: Scene 001
      value: KeyPressed3x
    alias: 'Dining Room Switch: Down 3x'
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 12
      label: Scene 002
      value: 3
    id: entry_up2
    alias: 'Entryway Switch: Up 2x'
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 12
      label: Scene 001
      value: 3
    id: entry_down2
    alias: 'Entryway Switch: Down 2x'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_up2
        - condition: trigger
          id: entry_up2
      sequence:
      - type: turn_on
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        brightness_pct: 75
    default: []
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_down2
        - condition: trigger
          id: entry_down2
      sequence:
      - type: turn_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_up3
      sequence:
      - device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        domain: number
        entity_id: number.livingroom_light_on_level
        type: set_value
        value: 100
    default: []
  mode: single
- id: '1645381546254'
  alias: iOS Bathroom Light Trigger
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    id: ios
    event_data:
      actionName: Bathroom Light
  condition: []
  action:
  - type: toggle
    device_id: 8b8fa19a5dddafb0fa74d2af37668516
    entity_id: light.master_bath_light
    domain: light
  mode: single
- id: '1661816714579'
  alias: Guest Room Light
  description: ''
  trigger:
  - device_id: 132629fb04b6ce78bd0cb46fac618f43
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition: []
  action:
  - type: toggle
    device_id: b7168513f86403297139fd9c668b8093
    entity_id: light.guest_ceiling
    domain: light
  mode: single
- id: '1663332587839'
  alias: Living Room Night Light disable
  description: Turn off the night light automation if the brightness changes independently
  trigger:
  - platform: state
    entity_id:
    - light.livingroom_light
    attribute: brightness
  condition:
  - condition: state
    entity_id: input_boolean.livingroom_nightlight_status
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.livingroom_nightlight_status
  mode: single
- id: '1663689219205'
  alias: Plex Meta Manager Notifications
  description: ''
  trigger:
  - platform: webhook
    webhook_id: pmm-complete
    id: pmm-complete
    alias: 'Webhook: PMM Completed'
    allowed_methods:
    - POST
    - PUT
    local_only: true
  - platform: webhook
    webhook_id: pmm-error
    id: pmm-error
    alias: 'Webhook: PMM Error'
    allowed_methods:
    - POST
    - PUT
    local_only: true
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: pmm-error
      sequence:
      - service: notify.telegram_tom
        data_template:
          title: PMM Error
          message: '{{ dict(trigger.json)|tojson }}'
  mode: single
- id: '1665168686491'
  alias: NAS Shutdown
  description: ''
  trigger: []
  condition:
  - condition: state
    entity_id: input_boolean.nas_shutdown
    attribute: 'on'
    state: ''
    alias: Shutdown Primer Active
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.nas_shutdown
    alias: Reset Primer Switch
  - service: notify.telegram_tom
    data:
      message: NAS shutting down
    alias: Telegram Notification
  mode: single
- id: '1668914116789'
  alias: Check Monthly Data
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'')[-2:]|int % states(''input_number.data_usage_refresh'')|int
      == 0 }}'
    alias: Time matches input
  condition: []
  action:
  - service: rest_command.data_usage_refresh
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: homeassistant.update_entity
    data: {}
    alias: Update template entities
    target:
      entity_id: sensor.data_usage_report
  mode: single
- id: '1669779259047'
  alias: Wallpanel Charging
  description: ''
  trigger:
  - type: battery_level
    platform: device
    device_id: d30463ca753d47d6291b1ebfb2160b3a
    entity_id: sensor.my_wall_panel_battery_level
    domain: sensor
    for:
      hours: 0
      minutes: 20
      seconds: 0
    alias: Low Battery
    below: 40
    id: low_battery
  - type: battery_level
    platform: device
    device_id: d30463ca753d47d6291b1ebfb2160b3a
    entity_id: sensor.my_wall_panel_battery_level
    domain: sensor
    for:
      hours: 8
      minutes: 0
      seconds: 0
    id: charged_battery
    alias: Battery Charged
    above: 85
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: low_battery
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.den_tablet_outlet_switch_2
    - conditions:
      - condition: trigger
        id: charged_battery
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.den_tablet_outlet_switch_2
  mode: single
- id: '1678293411132'
  alias: Day Cycle
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.toggle
    data: {}
    target:
      entity_id: input_boolean.day_cycle
  mode: single
- id: '1678398450428'
  alias: Den TV Source Switching
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.den_tv_wifi
    attribute: source
    to: Netflix
    id: netflix
  - platform: state
    entity_id:
    - media_player.den_tv_wifi
    attribute: source
    to: Prime Video (FireTV)
    id: primevideo
  - platform: state
    entity_id:
    - media_player.den_tv_wifi
    attribute: source
    id: hbomax
    to: com.hbo.hbonow
    enabled: true
  condition:
  - condition: state
    entity_id: binary_sensor.shield_online
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: netflix
      sequence:
      - service: script.netflix_on_shield_tv
        data: {}
    - conditions:
      - condition: trigger
        id: primevideo
      sequence:
      - service: script.prime_video_on_shield_tv
        data: {}
    - conditions:
      - condition: trigger
        id: hbomax
      sequence:
      - service: script.hbo_on_shieldtv
        data: {}
  mode: single
- id: '1683214595916'
  alias: Tautulli Stream Activity
  description: ''
  trigger:
  - platform: webhook
    webhook_id: tautulli-stream
    allowed_methods:
    - POST
    - PUT
    local_only: true
  condition: []
  action:
  - service: notify.telegram_tom
    data:
      title: "{% set action = trigger.json.action %} {% if action == \"play\" %}{%
        set verb = \"started\" %}{% set icon = \"⏯️\" %} {% elif action == \"pause\"
        %}{% set verb = \"paused\" %}{% set icon = \"⏸️\" %} {% elif action == \"stop\"
        %}{% set verb = \"stopped\" %}{% set icon = \"\U0001F6D1\" %} {% elif action
        == \"resume\" %}{% set verb = \"resumed\" %}{% set icon = \"⏯️\" %} {% else
        %} {% set verb = action %} {% endif %} \U0001F4FA{{icon}} *Plex: {{ iif(trigger.json.stream.local
        == \"1\", \"Local\", \"Remote\") }} stream {{ verb }}*"
      message: "{% set data = trigger.json %} {% set str = data.stream %} {% set action
        = data.action %} {% set xc = data.transcode %} {% if action == \"play\" %}{%
        set verb = \"started playing\" %} {% elif action == \"pause\" %}{% set verb
        = \"paused\" %} {% elif action == \"stop\" %}{% set verb = \"stopped\" %}
        {% elif action == \"resume\" %}{% set verb = \"resumed\" %} {% else %}{% set
        verb = action %} {% endif %} {{data.who.user}} {{verb}} \"{{data.what.title}}\"
        ({{data.what.year}}) {% if action != \"play\" %}at {{data.progress.time}}
        ({{data.progress.percent}}%){% endif %}\n\n*Player:* {{ trigger.json.who.player
        }}\n*Time:* {{ now().strftime(\"%-I:%M\") + now().strftime(\"%p\").lower()
        }}\n\n{% if action == \"play\" or action == \"resume\" %}*Quality Profile:*
        {{data.stream.quality_profile}}\n{% if data.source.optimized|int == 1 %}*Optimized
        Version:*\n  {{data.source.optimized_version}}\n\n{% endif %} *Stream Decision:*
        {{xc.transcode_decision}}{% if xc.transcode_decision|lower == \"transcode\"
        %}\n  - Video: {{xc.video_decision}} {{str.video_codec|upper}} to {{xc.video_codec|upper}}\n
        \ - Audio: {{xc.audio_decision}} {{str.audio_codec|upper}} to {{xc.audio_codec|upper}}\n
        \ - Subs: {{xc.subtitle_decision}}\n  - Bitrate: {{data.source.bitrate}}kbps
        to {{str.bitrate}}kbps\n  {% endif %}\n{% endif %}"
  mode: queued
  max: 4
- id: '1687635241459'
  alias: 'Notification: New Torrents Completed'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.torrent_activity_complete
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.torrent_activity_complete
      state: unavailable
      alias: Unavailable
    - condition: state
      entity_id: sensor.torrent_activity_complete
      state: unknown
      alias: Unknown
    alias: Status is not Unavailable or Unknown
  - condition: template
    value_template: '{{ trigger.to_state.state | int > trigger.from_state.state |
      int }}'
    alias: Value has increased
  action:
  - service: notify.telegram_tom
    data:
      title: Torrent Completed
      message: 'Number of completed torrents on Scylla has changed from {{trigger.from_state.state}}
        to {{trigger.to_state.state}}

        '
  mode: single
- id: '1689561610055'
  alias: 'Good Night: Timer Set'
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.lights_out_timer
  condition: []
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.good_night
    metadata: {}
  mode: single
