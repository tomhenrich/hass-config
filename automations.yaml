- id: '1609516804056'
  alias: Good Night
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 14
      label: Scene 001
      value: KeyPressed2x
  condition: []
  action:
  - scene: scene.good_night
  mode: single
- id: '1625264068184'
  alias: Plex Button
  description: ''
  trigger:
  - device_id: c41a7cabdaf68d062d0fa206dfe908cb
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
    id: singlepress
  - platform: event
    event_type: ios.action_fired
    id: ios
    event_data:
      actionName: Plex Open
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - singlepress
        - ios
      sequence:
      - service: script.plex_on_den_tv
        data: {}
  mode: restart
- id: '1632860503837'
  alias: 'Living Room: Light - Dimmer Button'
  description: ''
  use_blueprint:
    path: shannon/ikea_tradfri_2button_dimmer.yaml
    input:
      button_device: 72b251a428277f7ce1b4de58b20344b5
      light_target:
        entity_id:
        - light.livingroom_light
      light_step: 20
      light_delay_ms: 250
- id: '1632860568197'
  alias: 'Den: Lights - Dimmer Button'
  description: ''
  use_blueprint:
    path: shannon/ikea_tradfri_2button_dimmer.yaml
    input:
      button_device: 84350b6f41b7cad45266de52c9f7b34b
      light_target:
        entity_id:
        - light.den_light
      light_step: 20
      light_delay_ms: 250
- id: '1635291888215'
  alias: Barn Door Protocol
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.exterior_openings
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: doorsopened
  - platform: state
    entity_id:
    - binary_sensor.exterior_openings
    id: doorsclosed
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - climate.ecobee3
    from: 'off'
    to: heat
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: turned_on
  - platform: state
    entity_id:
    - input_boolean.barn_door_protocol
    from: 'off'
    to: 'on'
    id: barndoor_activation
  - platform: state
    entity_id:
    - input_boolean.barn_door_protocol
    from: 'on'
    to: 'off'
    id: barndoor_deactivation
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: doorsopened
      - condition: state
        entity_id: climate.ecobee3
        state: heat
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.barn_door_protocol
        data: {}
    - conditions:
      - condition: trigger
        id: doorsclosed
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.barn_door_protocol
        data: {}
    - conditions:
      - condition: trigger
        id: turned_on
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.barn_door_protocol
    - conditions:
      - condition: trigger
        id:
        - barndoor_activation
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.ecobee3
      - service: notify.telegram_tom
        data:
          title: '*Barn Door Protocol Activated*'
          message: Furnace has been turned off.
      alias: Barn Door Activating
    - conditions:
      - condition: trigger
        id:
        - barndoor_deactivation
      sequence:
      - service: ecobee.resume_program
        data:
          entity_id: climate.ecobee3
          resume_all: true
      - service: notify.telegram_tom
        data:
          title: '*Barn Door Protocol Deactivated*'
          message: Furnace has been turned back on.
      alias: Barn Door Deactivating
    default: []
  mode: parallel
  max: 10
- id: '1635292786302'
  alias: 'Living Room: Nightlight'
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.hallway_motion
    from: 'off'
    to: 'on'
    id: motion
    trigger: state
  - entity_id:
    - binary_sensor.hallway_motion
    id: nomotion
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    from: 'on'
    trigger: state
  - entity_id: light.livingroom_light
    id: lightsout
    from: 'on'
    to: 'off'
    trigger: state
  - trigger: state
    entity_id:
    - light.livingroom_light
    attribute: brightness
    id: brightness
  conditions:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
    enabled: true
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      - condition: device
        type: is_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        for:
          hours: 0
          minutes: 0
          seconds: 0
        alias: Living Room Light is currently off
      - condition: state
        entity_id: input_boolean.livingroom_nightlight
        state: 'on'
        alias: Within Defined Time Range
      sequence:
      - type: turn_on
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        brightness_pct: 25
      - target:
          entity_id: input_boolean.livingroom_nightlight_status
        data: {}
        action: input_boolean.turn_on
        alias: Turn on the status indicator helper
      alias: Motion after dark turns on light
    - conditions:
      - condition: trigger
        id: nomotion
        alias: When motion clears
      - condition: state
        state: 'on'
        entity_id: input_boolean.livingroom_nightlight_status
        alias: Confirm night light condition is active
      sequence:
      - type: turn_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
      - target:
          entity_id: input_boolean.livingroom_nightlight_status
        data: {}
        action: input_boolean.turn_off
        alias: Turn off the status indicator helper
      alias: Lack of motion while night light is on turns it off
    - conditions:
      - condition: trigger
        id:
        - brightness
        - lightsout
      sequence:
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.livingroom_nightlight_status
      alias: Disable Night Light status after manual change
    default: []
    alias: 'Choose:'
  mode: parallel
  max: 10
- id: '1635383409645'
  alias: 'Master Bathroom: Light Buttons'
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    id: low
    event_data:
      node_id: 15
      label: Scene 003
      value: KeyPressed
  - platform: event
    event_type: zwave_js_value_notification
    id: medium
    event_data:
      node_id: 15
      label: Scene 002
      value: KeyPressed2x
  - platform: event
    event_type: zwave_js_value_notification
    id: high
    event_data:
      node_id: 15
      label: Scene 002
      value: KeyPressed3x
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: low
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 25
    - conditions:
      - condition: trigger
        id: medium
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 50
    - conditions:
      - condition: trigger
        id: high
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 100
    default: []
  mode: single
- id: '1635473249505'
  alias: Doorbell Pressed
  description: ''
  triggers:
  - device_id: 6cdda8e754024fedf106703f18c3f64b
    domain: zha
    type: remote_button_short_press
    subtype: button_1
    trigger: device
  conditions: []
  actions:
  - data:
      title: Doorbell pressed!
      message: Doorbell has been rung.
    action: notify.telegram_tom
  mode: single
- id: '1635605604406'
  alias: 'Notify: Leak Detected'
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.kitchen_sink_leak_sensor
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
    trigger: state
  conditions: []
  actions:
  - data:
      message: Kitchen Sink Leak Detected!
    action: notify.telegram_tom
  mode: single
- id: '1641600921734'
  alias: 'Living Room: Light Switches'
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_up2
    event_data:
      node_id: 18
      label: Scene 002
      value: KeyPressed2x
    alias: 'Dining Room Switch: Up 2x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_down2
    event_data:
      node_id: 18
      label: Scene 001
      value: KeyPressed2x
    alias: 'Dining Room Switch: Down 2x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_up3
    event_data:
      node_id: 18
      label: Scene 002
      value: KeyPressed3x
    alias: 'Dining Room Switch: Up 3x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_down3
    event_data:
      node_id: 18
      label: Scene 001
      value: KeyPressed3x
    alias: 'Dining Room Switch: Down 3x'
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 12
      label: Scene 002
      value: 3
    id: entry_up2
    alias: 'Entryway Switch: Up 2x'
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 12
      label: Scene 001
      value: 3
    id: entry_down2
    alias: 'Entryway Switch: Down 2x'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_up2
        - condition: trigger
          id: entry_up2
      sequence:
      - type: turn_on
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        brightness_pct: 75
    default: []
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_down2
        - condition: trigger
          id: entry_down2
      sequence:
      - type: turn_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_up3
      sequence:
      - device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        domain: number
        entity_id: number.livingroom_light_on_level
        type: set_value
        value: 100
    default: []
  mode: single
- id: '1645381546254'
  alias: iOS Actions
  description: ''
  triggers:
  - event_type: ios.action_fired
    id: ios_masterbath
    event_data:
      actionName: Bathroom Light
    trigger: event
  - event_type: ios.action_fired
    id: ios_mutetautulli
    event_data:
      actionName: Pause Tautulli
    context:
      user_id:
      - 1adcbfbd5637444bacb8239bc794bb4a
    trigger: event
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - ios_masterbath
      sequence:
      - type: toggle
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: 0d28026431de136ba9b7f1a34aa54a48
        domain: light
    alias: Master Bath Toggle
  - alias: Mute Plex Notifications
    choose:
    - conditions:
      - condition: trigger
        id:
        - ios_mutetautulli
      sequence:
      - action: timer.start
        metadata: {}
        data: {}
        target:
          entity_id: timer.mute_plex_notifications
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.tautulli_notifications
  mode: single
- id: '1663689219205'
  alias: 'Plex: Kometa Notifications'
  description: Notifications based on the receipt of a webhook from Kometa (formerly
    Plex Meta Manager) when it has completed processing a library.
  triggers:
  - alias: 'Webhook: Kometa Run Completed'
    webhook_id: kometa-complete
    id: kometa-complete
    allowed_methods:
    - POST
    - PUT
    local_only: true
    trigger: webhook
  - alias: 'Webhook: Kometa Error'
    webhook_id: kometa-error
    id: kometa-error
    allowed_methods:
    - POST
    - PUT
    local_only: true
    trigger: webhook
  - alias: 'Webhook: Kometa Change Notification'
    webhook_id: kometa-changes
    id: kometa-changes
    allowed_methods:
    - POST
    - PUT
    local_only: true
    trigger: webhook
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - kometa-error
      sequence:
      - data_template:
          title: "{% set data = dict(trigger.json)|tojson %} {{ iif(data.critical|bool
            == true, \"\U0001F7E5\",\"\") }}Kometa Error"
          message: '{% set data = dict(trigger.json)|tojson %} {% set critical = data.critical|bool
            %} *Message:* {{ data }}'
        action: notify.telegram_tom
    - conditions:
      - condition: trigger
        id:
        - kometa-complete
      - condition: template
        value_template: (trigger.json.collections_created|int + trigger.json.collections_modified|int
          + trigger.json.collections_deleted|int) > 0
      sequence:
      - data_template:
          title: Kometa Run Completed
          message: '{% set data = trigger.json %} {% set changes = data.collections_created|int
            + data.collections_modified|int + data.collections_deleted|int %}   Kometa
            completed run at {{ data.end_time }}. {% if changes > 0 %} {{ data.collections_created
            }} collections created, {{ data.collections_modified }} collections modified,
            {{ data.collections_deleted }} collections deleted.{% else %}No changes
            made.{% endif %}'
        action: notify.telegram_tom
    - conditions:
      - condition: trigger
        id:
        - kometa-changes
      sequence:
      - data_template:
          title: Kometa Changes
          message: '{% set data = trigger.json %} "{{ data.collection }}" collection
            {{ iif(data.created|bool == true, "created","modified") }}

            {% if( data.additions|length > 0 ) %} *Additions* {{ data.additions }}
            {% endif %}

            {% if( data.removals|length > 0 ) %} *Removals* {{data.removals}} {% endif
            %}'
        action: notify.telegram_tom
  mode: parallel
  max: 15
- id: '1669779259047'
  alias: Wallpanel Charging
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.my_wall_panel_battery_level
    below: 25
    id: battery_low
  - trigger: numeric_state
    entity_id:
    - sensor.my_wall_panel_battery_level
    for:
      hours: 4
      minutes: 0
      seconds: 0
    id: battery_charged
    above: 90
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - low_battery
        - battery_low
        alias: Low Battery
      sequence:
      - data: {}
        target:
          entity_id: switch.den_tablet_outlet_switch_2
        action: switch.turn_on
    - conditions:
      - condition: trigger
        id:
        - battery_charged
      sequence:
      - data: {}
        target:
          entity_id:
          - switch.den_tablet_outlet_switch_2
        action: switch.turn_off
  mode: single
- id: '1678293411132'
  alias: Day Cycle
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.toggle
    data: {}
    target:
      entity_id: input_boolean.day_cycle
  mode: single
- id: '1706207124195'
  alias: Charybdis Notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.charybdis_cpu_busy
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: notify.telegram_tom
    data:
      message: Charybdis CPU has returned to low usage
  mode: single
- id: '1715745989209'
  alias: 'Plex: Tautulli Notifications'
  description: ''
  triggers:
  - allowed_methods:
    - POST
    - PUT
    local_only: false
    webhook_id: tautulli-stream
    enabled: true
    alias: Tautulli Streaming Webhook
    trigger: webhook
  conditions:
  - condition: template
    value_template: '{{ trigger.json.what.type != "clip" }}'
    alias: Not a "clip" (trailer, etc)
  actions:
  - alias: If notifications aren't muted, send a Telegram alert
    choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.tautulli_notifications
        state: 'on'
      sequence:
      - action: notify.telegram_tom
        data:
          title: '{% set data = trigger.json %} {% set action = data.action %} {%
            set verbs = {"play":"started","pause":"paused","stop":"stopped","resume":"resumed","change":"changed
            transcoded"} %} *Plex: {{data.who.user}} {{verbs[action]}} stream*

            '
          message: '{% set data = trigger.json %} {% set action = data.action %} _{{data.what.title}}_
            ({{data.what.year}})

            {% if(action in [''play'',''resume'']) %}{% set xc = data.transcode %}*Stream:*
            {{xc.decision}}{% endif %}'
        enabled: true
  - action: homeassistant.update_entity
    metadata: {}
    data:
      entity_id:
      - sensor.tautulli_stream_data
  mode: single
- id: '1715996370073'
  alias: Torrent Monitoring
  description: ''
  triggers:
  - entity_id:
    - sensor.completed_torrents
    id: torrents-increased
    trigger: state
  conditions:
  - condition: template
    value_template: '{{ trigger.to_state.state | int > trigger.from_state.state |
      int }}'
    alias: If new value is higher than previous value
  actions:
  - data:
      title: "\U0001F4C8 Torrent Completed"
      message: '{{trigger.to_state.state}} complete torrent{{ iif(trigger.to_state.state|int
        > 1, "s","") }} in queue (was {{trigger.from_state.state}})

        '
    alias: Send Telegram notification
    action: notify.telegram_tom
  mode: queued
  max: 10
- id: '1716003316170'
  alias: Set Default Theme
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: frontend.set_theme
    data:
      mode: dark
      name: Fluent Orange
  mode: single
- id: '1737656825568'
  alias: Plex Uptime Notifications
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.plex_server
    from: 'on'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: plex-down
  - trigger: state
    entity_id:
    - binary_sensor.plex_server
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: plex-start
    to: 'on'
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - plex-down
      sequence:
      - action: notify.telegram_tom
        metadata: {}
        data:
          message: Plex no longer running
    - conditions:
      - condition: trigger
        id:
        - plex-start
      sequence:
      - action: notify.telegram_tom
        metadata: {}
        data:
          message: Plex has started
  mode: single
- id: '1738104523368'
  alias: Plex Stream Activity
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.scylla
    id: scylla-playing
  conditions: []
  actions:
  - action: homeassistant.update_entity
    metadata: {}
    data:
      entity_id:
      - sensor.plex_stream_data
    alias: Refresh Plex session data from API
  mode: single
- id: '1740509787388'
  alias: Charybdis OHM Updater
  description: ''
  triggers:
  - trigger: time_pattern
    minutes: /1
  conditions:
  - alias: Charybdis is Online
    condition: state
    entity_id: binary_sensor.charybdis_ping
    state: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  actions:
  - alias: Update OHM Sensor
    action: homeassistant.update_entity
    data:
      entity_id:
      - sensor.charybdis_cpu_load
      - sensor.charybdis_cpu_temperature
  mode: single
- id: '1741716414639'
  alias: Generic Light Toggles
  description: Generic automations to associate buttons with on/off lights.
  triggers:
  - device_id: 132629fb04b6ce78bd0cb46fac618f43
    domain: zha
    type: remote_button_short_press
    subtype: turn_on
    trigger: device
    id: guestlight-button
  - device_id: c41a7cabdaf68d062d0fa206dfe908cb
    domain: zha
    type: remote_button_short_press
    subtype: turn_on
    trigger: device
    id: credenza-button
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - guestlight-button
      sequence:
      - action: homeassistant.toggle
        metadata: {}
        data: {}
        target:
          entity_id: light.guest_ceiling
        alias: Toggle Guest Room Ceiling Light
    - conditions:
      - condition: trigger
        id:
        - credenza-button
      sequence:
      - action: homeassistant.toggle
        metadata: {}
        data: {}
        target:
          entity_id: light.credenza_lights
        alias: Toggle Credenza Light Group
  mode: parallel
  max: 10
- id: '1742263688213'
  alias: Arc Tag Update
  description: ''
  triggers:
  - trigger: time
    at: 02:00:00
  conditions:
  - condition: time
    weekday:
    - wed
  actions:
  - action: homeassistant.update_entity
    metadata: {}
    data:
      entity_id:
      - sensor.arc_tags
  mode: single
- id: '1742313047529'
  alias: 'Plex: Resume Tautulli Notifications'
  description: ''
  triggers:
  - alias: If Tautulli Notifications have been disabled long enough
    trigger: state
    entity_id:
    - input_boolean.tautulli_notifications
    to: 'off'
    from: 'on'
    for:
      hours: 2
      minutes: 0
      seconds: 0
  conditions: []
  actions:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.tautulli_notifications
    alias: Turn Notifications Back On
  - action: notify.telegram_tom
    metadata: {}
    data:
      message: Tautulli Notifications Resuming
  mode: single
- id: '1742484754804'
  alias: Dogs Heartworm Meds
  description: ''
  triggers:
  - trigger: time
    at: 00:01:00
  conditions:
  - condition: template
    value_template: '{{ now().day == 15 }}'
    alias: on the 15th
  actions:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.dogs_heartworm_meds
  mode: single
- id: '1744396504102'
  alias: Mute Plex Telegram Notifications
  description: ''
  use_blueprint:
    path: marc-romu/telegram-bot--command__action.yaml
    input:
      telegram_command: /mute
      telegram_bot: HenrichBot
      sequence:
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.tautulli_notifications
- id: '1748092050802'
  alias: Vacation Alerts
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.exterior_openings
  - trigger: state
    entity_id:
    - binary_sensor.garage_door_sensor
  conditions:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  actions:
  - action: notify.telegram_tom
    metadata: {}
    data:
      message: Unexpected Activity While Away
      title: Vacation Alert
  mode: single
