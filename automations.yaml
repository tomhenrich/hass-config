- id: '1609516804056'
  alias: Good Night
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 14
      label: Scene 001
      value: KeyPressed2x
  condition: []
  action:
  - scene: scene.good_night
  mode: single
- id: '1625264068184'
  alias: Plex Button
  description: ''
  trigger:
  - device_id: c41a7cabdaf68d062d0fa206dfe908cb
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
    id: singlepress
  - platform: event
    event_type: ios.action_fired
    id: ios
    event_data:
      actionName: Plex Open
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - singlepress
        - ios
      sequence:
      - service: script.plex_on_den_tv
        data: {}
  mode: restart
- id: '1632860503837'
  alias: 'Living Room: Light - Dimmer Button'
  description: ''
  use_blueprint:
    path: shannon/ikea_tradfri_2button_dimmer.yaml
    input:
      button_device: 72b251a428277f7ce1b4de58b20344b5
      light_target:
        entity_id:
        - light.livingroom_light
      light_step: 20
      light_delay_ms: 250
- id: '1632860568197'
  alias: 'Den: Lights - Dimmer Button'
  description: ''
  use_blueprint:
    path: shannon/ikea_tradfri_2button_dimmer.yaml
    input:
      button_device: 84350b6f41b7cad45266de52c9f7b34b
      light_target:
        entity_id:
        - light.den_light
      light_step: 20
      light_delay_ms: 250
- id: '1635291448132'
  alias: 'Porch: Light on Timer'
  description: ''
  trigger:
  - platform: sun
    event: sunset
    id: sunset
  - platform: sun
    event: sunrise
    offset: 0
    id: sunrise
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - type: turn_on
        device_id: d41ff68d9a3fcd7dec436c35f3e52293
        entity_id: c41f0d64d53843eb0162042d51a14e0a
        domain: light
      alias: Turn on at sunset
    - conditions:
      - condition: trigger
        id:
        - sunrise
        alias: Turn off at sunrise
      sequence:
      - type: turn_off
        device_id: d41ff68d9a3fcd7dec436c35f3e52293
        entity_id: c41f0d64d53843eb0162042d51a14e0a
        domain: light
    default: []
  mode: single
- id: '1635291888215'
  alias: Barn Door Protocol
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.exterior_openings
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: doorsopened
  - platform: state
    entity_id:
    - binary_sensor.exterior_openings
    id: doorsclosed
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - climate.ecobee3
    from: 'off'
    to: heat
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: turned_on
  - platform: state
    entity_id:
    - input_boolean.barn_door_protocol
    from: 'off'
    to: 'on'
    id: barndoor_activation
  - platform: state
    entity_id:
    - input_boolean.barn_door_protocol
    from: 'on'
    to: 'off'
    id: barndoor_deactivation
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: doorsopened
      - condition: state
        entity_id: climate.ecobee3
        state: heat
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.barn_door_protocol
        data: {}
    - conditions:
      - condition: trigger
        id: doorsclosed
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.barn_door_protocol
        data: {}
    - conditions:
      - condition: trigger
        id: turned_on
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.barn_door_protocol
    - conditions:
      - condition: trigger
        id:
        - barndoor_activation
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.ecobee3
      - service: notify.telegram_tom
        data:
          title: '*Barn Door Protocol Activated*'
          message: Furnace has been turned off.
      alias: Barn Door Activating
    - conditions:
      - condition: trigger
        id:
        - barndoor_deactivation
      sequence:
      - service: ecobee.resume_program
        data:
          entity_id: climate.ecobee3
          resume_all: true
      - service: notify.telegram_tom
        data:
          title: '*Barn Door Protocol Deactivated*'
          message: Furnace has been turned back on.
      alias: Barn Door Deactivating
    default: []
  mode: parallel
  max: 10
- id: '1635292786302'
  alias: 'Living Room: Nightlight'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.hallway_motion
    from: 'off'
    to: 'on'
    id: motion
  - platform: state
    entity_id:
    - binary_sensor.hallway_motion
    id: nomotion
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    from: 'on'
  - platform: state
    entity_id: light.livingroom_light
    id: lightsout
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
    enabled: false
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      - condition: device
        type: is_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        for:
          hours: 0
          minutes: 0
          seconds: 0
      - condition: state
        entity_id: sun.sun
        state: below_horizon
        for:
          hours: 0
          minutes: 0
          seconds: 0
      sequence:
      - type: turn_on
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        brightness_pct: 25
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.livingroom_nightlight_status
        data: {}
    - conditions:
      - condition: trigger
        id: nomotion
      - condition: state
        state: 'on'
        entity_id: input_boolean.livingroom_nightlight_status
      sequence:
      - type: turn_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.livingroom_nightlight_status
        data: {}
    default: []
  mode: restart
- id: '1635383409645'
  alias: 'Master Bathroom: Light Buttons'
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    id: low
    event_data:
      node_id: 15
      label: Scene 003
      value: KeyPressed
  - platform: event
    event_type: zwave_js_value_notification
    id: medium
    event_data:
      node_id: 15
      label: Scene 002
      value: KeyPressed2x
  - platform: event
    event_type: zwave_js_value_notification
    id: high
    event_data:
      node_id: 15
      label: Scene 002
      value: KeyPressed3x
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: low
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 25
    - conditions:
      - condition: trigger
        id: medium
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 50
    - conditions:
      - condition: trigger
        id: high
      sequence:
      - type: turn_on
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: light.master_bath_light
        domain: light
        brightness_pct: 100
    default: []
  mode: single
- id: '1635473249505'
  alias: Doorbell Pressed
  description: ''
  trigger:
  - device_id: 6cdda8e754024fedf106703f18c3f64b
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: button_1
  condition:
  - condition: state
    entity_id: timer.doorbell_pause
    state: idle
  action:
  - service: notify.telegram_tom
    data:
      title: Doorbell pressed!
      message: Doorbell has been rung.
  - service: timer.start
    data: {}
    target:
      entity_id: timer.doorbell_pause
  - if:
    - condition: state
      entity_id: binary_sensor.den_tv_active
      state: 'on'
      alias: Confirm Den TV is active
    then:
    - service: notify.den_tv_notifications
      data:
        title: Doorbell
        message: Doorbell has been rung!
    enabled: false
  mode: single
- id: '1635605604406'
  alias: 'Notify: Leak Detected'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_sink_leak_sensor
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - service: notify.mobile_app_iphone
    data:
      title: Leak Detected!
      message: Water detected on laundry area floor!
  - service: notify.telegram_tom
    data:
      message: Kitchen Sink Leak Detected!
  mode: single
- id: '1637943911802'
  alias: 'Living Room: Christmas Tree Timer'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.time_christmas_tree_on
    id: tree_on
  - platform: time
    at: input_datetime.time_christmas_tree_off
    id: tree_off
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: tree_on
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.monoprice_1
    - conditions:
      - condition: trigger
        id: tree_off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.monoprice_1
    default: []
  mode: single
- id: '1641600921734'
  alias: 'Living Room: Light Switches'
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_up2
    event_data:
      node_id: 18
      label: Scene 002
      value: KeyPressed2x
    alias: 'Dining Room Switch: Up 2x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_down2
    event_data:
      node_id: 18
      label: Scene 001
      value: KeyPressed2x
    alias: 'Dining Room Switch: Down 2x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_up3
    event_data:
      node_id: 18
      label: Scene 002
      value: KeyPressed3x
    alias: 'Dining Room Switch: Up 3x'
  - platform: event
    event_type: zwave_js_value_notification
    id: dining_down3
    event_data:
      node_id: 18
      label: Scene 001
      value: KeyPressed3x
    alias: 'Dining Room Switch: Down 3x'
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 12
      label: Scene 002
      value: 3
    id: entry_up2
    alias: 'Entryway Switch: Up 2x'
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 12
      label: Scene 001
      value: 3
    id: entry_down2
    alias: 'Entryway Switch: Down 2x'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_up2
        - condition: trigger
          id: entry_up2
      sequence:
      - type: turn_on
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
        brightness_pct: 75
    default: []
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_down2
        - condition: trigger
          id: entry_down2
      sequence:
      - type: turn_off
        device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        entity_id: light.livingroom_light
        domain: light
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: dining_up3
      sequence:
      - device_id: 2b32fb5d67808eb1d15a5dabb1ac493b
        domain: number
        entity_id: number.livingroom_light_on_level
        type: set_value
        value: 100
    default: []
  mode: single
- id: '1645381546254'
  alias: iOS Bathroom Light Trigger
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    id: ios_masterbath
    event_data:
      actionName: Bathroom Light
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - ios_masterbath
      sequence:
      - type: toggle
        device_id: 8b8fa19a5dddafb0fa74d2af37668516
        entity_id: 0d28026431de136ba9b7f1a34aa54a48
        domain: light
  mode: single
- id: '1661816714579'
  alias: Guest Room Light
  description: ''
  trigger:
  - device_id: 132629fb04b6ce78bd0cb46fac618f43
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition: []
  action:
  - type: toggle
    device_id: b7168513f86403297139fd9c668b8093
    entity_id: light.guest_ceiling
    domain: light
  mode: single
- id: '1663332587839'
  alias: Living Room Night Light disable
  description: Turn off the night light automation if the brightness changes independently
  trigger:
  - platform: state
    entity_id:
    - light.livingroom_light
    attribute: brightness
  condition:
  - condition: state
    entity_id: input_boolean.livingroom_nightlight_status
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.livingroom_nightlight_status
  mode: single
- id: '1663689219205'
  alias: Plex Meta Manager Notifications
  description: ''
  trigger:
  - alias: 'Webhook: PMM Completed'
    platform: webhook
    webhook_id: kometa-complete
    id: kometa-complete
    allowed_methods:
    - POST
    - PUT
    local_only: true
  - alias: 'Webhook: PMM Error'
    platform: webhook
    webhook_id: kometa-error
    id: kometa-error
    allowed_methods:
    - POST
    - PUT
    local_only: true
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - kometa-error
      sequence:
      - service: notify.telegram_tom
        data_template:
          title: "{% set data = dict(trigger.json)|tojson %} {{ iif(data.critical|bool
            == true, \"\U0001F7E5\",\"\") }}Kometa Error"
          message: '{% set data = dict(trigger.json)|tojson %} {% set critical = data.critical|bool
            %} *Message:* {{ data }}'
    - conditions:
      - condition: trigger
        id:
        - kometa-complete
      sequence:
      - service: notify.telegram_tom
        data_template:
          title: Kometa Run Completed
          message: '{% set data = trigger.json %} Kometa completed run at {{ data.end_time
            }}. {{ data.collections_created }} collections created, {{ data.collections_modified
            }} collections modified, {{ data.collections_deleted }} collections deleted.'
  mode: single
- id: '1665168686491'
  alias: NAS Shutdown
  description: ''
  trigger: []
  condition:
  - condition: state
    entity_id: input_boolean.nas_shutdown
    attribute: 'on'
    state: ''
    alias: Shutdown Primer Active
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.nas_shutdown
    alias: Reset Primer Switch
  - service: notify.telegram_tom
    data:
      message: NAS shutting down
    alias: Telegram Notification
  mode: single
- id: '1669779259047'
  alias: Wallpanel Charging
  description: ''
  trigger:
  - type: battery_level
    platform: device
    device_id: d30463ca753d47d6291b1ebfb2160b3a
    entity_id: sensor.my_wall_panel_battery_level
    domain: sensor
    for:
      hours: 0
      minutes: 20
      seconds: 0
    alias: Low Battery
    below: 40
    id: low_battery
  - alias: Battery Charged
    type: battery_level
    platform: device
    device_id: d30463ca753d47d6291b1ebfb2160b3a
    entity_id: sensor.my_wall_panel_battery_level
    domain: sensor
    for:
      hours: 6
      minutes: 0
      seconds: 0
    id: charged_battery
    above: 80
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: low_battery
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.den_tablet_outlet_switch_2
    - conditions:
      - condition: trigger
        id: charged_battery
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.den_tablet_outlet_switch_2
  mode: single
- id: '1678293411132'
  alias: Day Cycle
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.toggle
    data: {}
    target:
      entity_id: input_boolean.day_cycle
  mode: single
- id: '1701649468478'
  alias: Christmas Lights Timer
  description: ''
  trigger:
  - platform: time
    id: lights_on
    at: input_datetime.christmas_lights_on
  - platform: time
    id: lights_off
    at: input_datetime.christmas_lights_off
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
    enabled: false
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - lights_on
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.monoprice_energy_outlet_switch
    - conditions:
      - condition: trigger
        id:
        - lights_off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.monoprice_energy_outlet_switch
    default: []
  mode: single
- id: '1706207124195'
  alias: Charybdis Notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.charybdis_cpu_busy
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: notify.telegram_tom
    data:
      message: Charybdis CPU has returned to low usage
  mode: single
- id: '1715745989209'
  alias: 'Plex: Tautulli Notifications'
  description: ''
  trigger:
  - platform: webhook
    allowed_methods:
    - POST
    - PUT
    local_only: false
    webhook_id: tautulli-stream
    enabled: true
    alias: Tautulli Streaming Webhook
  condition: []
  action:
  - action: notify.telegram_tom
    data:
      title: '{% set data = trigger.json %} {% set action = data.action %} {% set
        verbs = {"play":"started","pause":"paused","stop":"stopped","resume":"resumed",
        "change":"changed transcoded"} %} *Plex: {{data.who.user}} {{verbs[action]
        }} stream*

        '
      message: '{% set data = trigger.json %} {% set action = data.action %} _{{data.what.title}}_
        ({{data.what.year}})

        at {{ now().strftime("%-I:%M") + now().strftime("%p").lower() }}

        {% if(action in [''play'',''resume'']) %} {% set xc = data.transcode %}*Stream:*
        {{xc.decision}} {% endif %}'
    enabled: true
  mode: single
- id: '1715996370073'
  alias: Torrent Monitoring
  description: ''
  trigger:
  - platform: webhook
    allowed_methods:
    - POST
    - PUT
    local_only: true
    webhook_id: torrent-completed
    id: torrent-completed
  - platform: state
    entity_id:
    - sensor.torrents_complete
    id: torrents-increased
  condition: []
  action:
  - service: homeassistant.update_entity
    target:
      entity_id: sensor.torrents_complete
    data: {}
  - choose:
    - conditions:
      - condition: trigger
        id:
        - torrent-completed
      sequence:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.torrents_complete
        data: {}
        alias: Refresh count of completed torrents
      alias: When webhook indicates new torrents have completed
    - conditions:
      - condition: trigger
        id:
        - torrents-increased
      - condition: template
        value_template: '{{ trigger.to_state.state | int > trigger.from_state.state
          | int }}'
        alias: If new value is higher than previous value
      sequence:
      - service: notify.telegram_tom
        data:
          title: "\U0001F4C8 Torrent Completed"
          message: '{{trigger.to_state.state}} complete torrent{{ iif(trigger.to_state.state|int
            > 1, "s","") }} in queue (was {{trigger.from_state.state}})

            '
        alias: Send Telegram notification
      alias: When number of completed torrents increases
  mode: queued
  max: 10
- id: '1716003316170'
  alias: Set Default Theme
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: frontend.set_theme
    data:
      mode: dark
      name: Fluent Orange
  mode: single
- id: '1716929777230'
  alias: Furnace filter lifetime
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.furnace_running
    to: 'on'
    id: furnace-starts
    alias: When furnace starts running
  - alias: When furnace stops running
    platform: state
    entity_id:
    - binary_sensor.furnace_running
    id: furnace-stops
    from: 'on'
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.furnace_filter_usage
    id: filter-expired
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - furnace-starts
      sequence:
      - alias: Resume furnace filter timer
        service: timer.start
        metadata: {}
        data: {}
        target:
          entity_id: timer.furnace_filter_usage
      alias: Resume timer when furnace turns on
    - conditions:
      - condition: trigger
        id:
        - furnace-stops
      sequence:
      - alias: Resume furnace filter timer
        service: timer.pause
        target:
          entity_id: timer.furnace_filter_usage
        data: {}
      alias: Pause timer when furnace turns off
    - conditions:
      - condition: trigger
        id:
        - filter-expired
      sequence:
      - service: notify.telegram_tom
        data:
          message: 'HVAC: Furnace filter needs to be replaced.'
      alias: Notify when filter timer runs out
  mode: single
