####################
#
# TRIGGERED SENSORS
#
####################


- trigger:
    - platform: time_pattern
      hours: /3
    - platform: homeassistant
      event: start
    - platform: time
      at: "23:55:00"
  action:
    - service: weather.get_forecasts
      data:
        type: daily
      target:
        entity_id: weather.ecobee3
      response_variable: forecastdata
  sensor:
    - name: Weather Forecast Daily
      unique_id: weather_forecast_daily
      state: "{{ forecastdata['weather.ecobee3'].forecast[0].condition }}"
      attributes:
        forecast: "{{ forecastdata['weather.ecobee3'].forecast }}"
          
- trigger:
    - platform: time
      at: "00:00:01"
    - platform: homeassistant
      event: start
  sensor:
    - name: "Weekday"
      unique_id: weekday
      state: "{{ now().strftime('%w')|int }}"
      icon: "mdi:calendar"
      attributes:
        day: "{{ now().strftime('%A') }}"
    - name: Days This Month
      unique_id: days_this_month
      state: >
        {% set today = now() %}
        {% set days = (today.replace(month=today.month % 12 + 1, day=1) - timedelta(days=1)).day %}
        {{ days }}

# - trigger:
#     - platform: time_pattern
#       minutes: "/20"
#     - platform: homeassistant
#       event: start
#   sensor:
#     - name: "Month Gone"
#       unique_id: month_gone
#       state: >-
#         {% set today = now() %}
#         {% set days = (today.replace(month=today.month % 12 + 1, day=1) - timedelta(days=1)).day %}
#         {% set totalminutes = days*24*60 %}
#         {% set elapsedminutes = ((today.day-1)*24*60)+(today.hour*60)+(today.minute) %}
#         {{ ((elapsedminutes / totalminutes) * 100)|round(1) }}
#       unit_of_measurement: "%"
#       icon: "mdi:percent"
#       state_class: total_increasing



####################
#
#   STANDARD SENSORS
#
####################

- sensor:

  - name: "Telegram: Tom's Chat ID"
    unique_id: telegram_chatid_tom
    state: !secret telegram_chatid_tom


  #=== ENVIRONMENTAL SENSORS

  - name: Air Quality
    unique_id: airquality
    state: >
      {% if states("sensor.iqair_aqi") != "unavailable" %}
        {% set aqi = states("sensor.iqair_aqi")|int %}
        {% if aqi <= 50 %} 1
        {% elif aqi <= 100 %} 2
        {% elif aqi <= 200 %} 3
        {% elif aqi <= 300 %} 4
        {% else %} 5
        {% endif %}
      {% else %}
        0
      {% endif %}
    attributes:
      condition: >
        {%
          set conditions = {
            0: 'Unknown',
            1: 'Good',
            2: 'Moderate',
            3: 'Unhealthy',
            4: 'Very Unhealthy',
            5: 'Hazardous'
          }
        %}
        {{ conditions[this.state|int] }}
      color: >
        {{ state_attr("input_select.severity_scale", "options")[this.state|int] }}
    icon: >
      {%
          set icons = {
            0: 'mdi:help-circle-outline',
            1: 'mdi:emoticon',
            2: 'mdi:emoticon-neutral',
            3: 'mdi:emoticon-frown',
            4: 'mdi:alert',
            5: 'mdi:skull'
          }
      %}
      {{ icons[this.state|int] }}


####################
#
# BINARY SENSORS
#
####################

- binary_sensor:

  - name: "Charybdis CPU Busy"
    unique_id: charybdis_cpu_busy
    availability: "{{ states('sensor.charybdis_cpu_load') != 'unavailable' }}"
    state: >
      {{states("sensor.charybdis_cpu_load")|float >= 50 }}


#   - name: Arc Tags
#     unique_id: arc_tags
#     availability: "{{ states('sensor.arc_tags') != 'unavailable' }}"
#     state: >
#         {{ (states('sensor.weekday')|int >= 2 and states('sensor.weekday')|int <=5)|bool }}
#     icon: >
#       mdi:tag{{ "-hidden" if states('sensor.weekday')|int != 5 }}
#     attributes:
#       color_blue: '#1E90FF'
#       color_orange: '#FF8C00'
#       color_pink: '#FF1493'
#       color_white: '#FFFFFF'
#       color_yellow: '#FFFF00'




